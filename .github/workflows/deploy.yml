# Workflow for deploying static content to GitHub Pages
name: Deploy static content to GitHub Pages

on:
  # Trigger workflow on push to the main branch
  push:
    branches:
      - main

  # Allow manual trigger of the workflow through the Actions tab
  workflow_dispatch:

<<<<<<< HEAD
permissions:
  # Set required permissions for deployment
  contents: read
  pages: write
  id-token: write

concurrency:
  # Allow only one deployment at a time, cancel in-progress deployments
  group: 'github-pages-deployment'
  cancel-in-progress: true

jobs:
  deploy:
    # Define the target deployment environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Step 3: Install dependencies
      - name: Install project dependencies
        run: npm ci

      # Step 4: Build the project
      - name: Build the project
        run: npm run build

      # Step 5: Configure GitHub Pages
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      # Step 6: Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      # Step 7: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
=======
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.0'
          cache: 'npm'

      - name: Install dependencies 📦
        run: npm ci

      - name: Create static build 🔧
        run: |
          # Create a simple build directory with static files
          mkdir -p build
          cp -r static/* build/ || true

          # Create CNAME file if it doesn't exist
          echo "vigilia.ai" > build/CNAME

          # Create a simple index.html file
          cat > build/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Vigilia AI</title>
            <link rel="icon" href="favicon.png" />
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                margin: 0;
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                background-color: #f5f5f5;
              }
              .container {
                max-width: 800px;
                padding: 2rem;
                text-align: center;
              }
              h1 {
                font-size: 2.5rem;
                margin-bottom: 1rem;
              }
              p {
                font-size: 1.2rem;
                line-height: 1.6;
                color: #555;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>Vigilia AI</h1>
              <p>Coming soon...</p>
            </div>
          </body>
          </html>
          EOL

          # Create a 404 page
          cat > build/404.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Page Not Found - Vigilia AI</title>
            <link rel="icon" href="favicon.png" />
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                margin: 0;
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                background-color: #f5f5f5;
              }
              .container {
                max-width: 800px;
                padding: 2rem;
                text-align: center;
              }
              h1 {
                font-size: 2.5rem;
                margin-bottom: 1rem;
              }
              p {
                font-size: 1.2rem;
                line-height: 1.6;
                color: #555;
              }
              a {
                color: #0066cc;
                text-decoration: none;
              }
              a:hover {
                text-decoration: underline;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>404 - Page Not Found</h1>
              <p>The page you are looking for does not exist.</p>
              <p><a href="/">Return to Home</a></p>
            </div>
          </body>
          </html>
          EOL

          # Ensure .nojekyll file exists
          touch build/.nojekyll

      - name: Deploy to GitHub Pages 🚀
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          clean: true
>>>>>>> e263716 (add)
