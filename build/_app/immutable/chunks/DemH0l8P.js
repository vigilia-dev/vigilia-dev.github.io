function y(){}const F=t=>t;function x(t,n){for(const e in n)t[e]=n[e];return t}function k(t){return t()}function z(){return Object.create(null)}function w(t){t.forEach(k)}function M(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function S(t){return Object.keys(t).length===0}function j(t,...n){if(t==null){for(const o of n)o(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function U(t,n,e){t.$$.on_destroy.push(j(n,e))}function A(t,n,e,o){if(t){const u=d(t,n,e,o);return t[0](u)}}function d(t,n,e,o){return t[1]&&o?x(e.ctx.slice(),t[1](o(n))):e.ctx}function B(t,n,e,o){return t[2],n.dirty}function C(t,n,e,o,u,g){if(u){const m=d(n,e,o,g);t.p(m,u)}}function D(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function G(t){const n=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return n?[parseFloat(n[1]),n[2]||"px"]:[t,"px"]}let i;function a(t){i=t}function h(){if(!i)throw new Error("Function called outside component initialization");return i}function H(t){h().$$.on_mount.push(t)}function I(t){h().$$.after_update.push(t)}const r=[],_=[];let c=[];const p=[],b=Promise.resolve();let f=!1;function E(){f||(f=!0,b.then(q))}function J(){return E(),b}function O(t){c.push(t)}const l=new Set;let s=0;function q(){if(s!==0)return;const t=i;do{try{for(;s<r.length;){const n=r[s];s++,a(n),v(n.$$)}}catch(n){throw r.length=0,s=0,n}for(a(null),r.length=0,s=0;_.length;)_.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];l.has(e)||(l.add(e),e())}c.length=0}while(r.length);for(;p.length;)p.pop()();f=!1,l.clear(),a(t)}function v(t){if(t.fragment!==null){t.update(),w(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function K(t){const n=[],e=[];c.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),c=n}export{O as a,G as b,U as c,I as d,_ as e,A as f,D as g,B as h,F as i,M as j,S as k,i as l,z as m,y as n,H as o,q as p,a as q,w as r,P as s,J as t,C as u,K as v,k as w,r as x,E as y};
